#!/bin/bash
# –í–µ—Ä—Å–∏—è
VERSION="0.0.5"

# –¶–≤–µ—Ç–∞
RED='\e[31m'
YELLOW='\e[33m'
GREEN='\e[32m'
NC='\e[0m'

# ====== –§–£–ù–ö–¶–ò–Ø –°–ü–ò–ù–ù–ï–†–ê ======
spinner() {
    local pid=$1
    local delay=0.1
    local spinstr='|/-\'
    local start_time=$(date +%s)
    local min_duration=3
    echo -ne "${YELLOW}"
    while kill -0 $pid 2>/dev/null; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    local end_time=$(date +%s)
    local elapsed=$((end_time - start_time))
    if [ $elapsed -lt $min_duration ]; then
        sleep $((min_duration - elapsed))
    fi
    echo -ne "${NC}"
}

# ====== –ì–ï–ù–ï–†–ê–¶–ò–Ø SHORTS_ID ======
generate_ids() {
    echo "–°–∫–æ–ª—å–∫–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å?"
    read count
    if ! [[ "$count" =~ ^[0-9]+$ ]]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ!${NC}"
        return
    fi
    if [ "$count" -le 0 ]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è!${NC}"
        return
    fi

    {
        for ((i=1; i<=count; i++)); do
            id=$(head -c 8 /dev/urandom | xxd -p)
            echo "\"$id\","
        done
    } > /tmp/ids_output.txt &

    pid=$!
    spinner $pid
    wait $pid
    status=$?

    echo
    if [ $status -ne 0 ]; then
        echo -e "${RED}–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.${NC}"
        return
    fi

    echo -e "${GREEN}ID —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã! –í–æ—Ç —Ç–≤–æ–π —Å–ø–∏—Å–æ–∫:${NC}\n"
    cat /tmp/ids_output.txt
    echo -e "\a"
}

# ====== ISO‚Üí–§–õ–ê–ì ======
iso_to_flag() {
    country_code=$(echo "$1" | tr '[:lower:]' '[:upper:]')
    for ((i=0; i<${#country_code}; i++)); do
        char=${country_code:i:1}
        code=$(( $(printf '%d' "'$char") - 65 + 0x1F1E6 ))
        printf "\\U$(printf '%X' $code)"
    done
}

# ====== –ü–û–ò–°–ö –°–¢–†–ê–ù ======
country_lookup() {
    while true; do
        echo "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã (–Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –º–æ–∂–Ω–æ —á–∞—Å—Ç—å, 0 = –≤—ã—Ö–æ–¥ –≤ –º–µ–Ω—é):"
        read input

        if [[ "$input" == "0" ]]; then
            return
        fi

        key=$(echo "$input" | tr '[:upper:]' '[:lower:]')
        SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

        matches=$(awk -F',' -v key="$key" -v file="$SCRIPT_DIR/countries.csv" '
        BEGIN {
            i=0;
            while ((getline < file) > 0) {
                ru=tolower($1); en=tolower($2); iso=$3;
                gsub(/\r$/,"",ru); gsub(/\r$/,"",en);
                if (ru ~ key || en ~ key) {
                    i++;
                    result[i]=iso "," en;
                }
            }
            for (j=1; j<=i; j++) print result[j];
        }')

        if [ -z "$matches" ]; then
            echo -e "${RED}–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É '${input}'.${NC}"
            continue
        fi

        total=$(echo "$matches" | wc -l)
        echo -e "${GREEN}–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:${NC}"
        i=1
        echo "$matches" | while IFS=',' read -r iso en; do
            flag=$(iso_to_flag "$iso")
            echo " $i) $flag $en"
            i=$((i+1))
        done > /tmp/matches_list.txt

        cat /tmp/matches_list.txt

        echo "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä (–∏–ª–∏ 0 –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞):"
        read choice

        if [[ "$choice" == "0" ]]; then
            continue
        fi

        if ! [[ "$choice" =~ ^[0-9]+$ ]]; then
            echo -e "${RED}–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä!${NC}"
            continue
        fi

        selected=$(sed -n "${choice}p" /tmp/matches_list.txt | awk '{print $2,$3,$4}')
        if [ -z "$selected" ]; then
            echo -e "${RED}–ù–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º.${NC}"
            continue
        fi

        echo -e "${YELLOW}–í—ã –≤—ã–±—Ä–∞–ª–∏:${NC} $selected"
        return
    done
}

# ====== –ü–†–û–í–ï–†–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–ô ======
check_update() {
    SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

    latest=$(curl -s https://raw.githubusercontent.com/detective-noir-dev/Remnawave-Scripts/main/version.txt)

    if [ -z "$latest" ]; then
        echo -e "${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.${NC}"
        return
    fi

    echo "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $VERSION"
    echo "–ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: $latest"

    if [ "$VERSION" != "$latest" ]; then
        echo -e "${YELLOW}–ï—Å—Ç—å –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è! –•–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å—Å—è? (y/n)${NC}"
        read ans
        if [[ "$ans" =~ ^[Yy]$ ]]; then
            curl -o "$SCRIPT_DIR/scripts.sh" https://raw.githubusercontent.com/detective-noir-dev/Remnawave-Scripts/main/scripts.sh
            chmod +x "$SCRIPT_DIR/scripts.sh"
            echo -e "${GREEN}–°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª—ë–Ω –¥–æ –≤–µ—Ä—Å–∏–∏ $latest${NC}"
        fi
    else
        echo -e "${GREEN}–£ –≤–∞—Å —É–∂–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è.${NC}"
    fi
}

# ====== –ú–ï–ù–Æ ======
show_menu() {
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    echo "1) –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å shorts_id"
    echo "2) –£–∑–Ω–∞—Ç—å —Ñ–ª–∞–≥ —Å—Ç—Ä–∞–Ω—ã"
    echo "3) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é/–æ–±–Ω–æ–≤–∏—Ç—å"
    echo "0) –í—ã–π—Ç–∏"
    read choice
    case $choice in
        1) generate_ids ;;
        2) country_lookup ;;
        3) check_update ;;
        0) echo "–í—ã—Ö–æ–¥... –ü–æ–∫–∞ üëã"; exit 0 ;;
        *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ üòÖ${NC}" ;;
    esac
}

while true; do
    show_menu
done